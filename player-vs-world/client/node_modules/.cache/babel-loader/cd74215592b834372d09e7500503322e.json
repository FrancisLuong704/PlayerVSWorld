{"ast":null,"code":"import axios from \"axios\";\nimport Auth from \"./auth\";\nexport default {\n  // Gets all Messages\n  getMessages: function getMessages(userInfo) {\n    console.log(Auth.getToken());\n    return axios.post(\"/api/mail/receiver\", userInfo, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  // <------------------------------------>\n  // Gets a single message by ID\n  getMessage: function getMessage(messageId) {\n    return axios.put(\"/api/mail/get\", messageId, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  // <------------------------------------>\n  //sending a message\n  sendMessage: function sendMessage(message) {\n    console.log(\"this is the token yo\", Auth.getToken());\n    return axios.post(\"/api/mail/send\", message, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  // <------------------------------------>\n  // DELETE route for deleting sent mail\n  deleteSent: function deleteSent(deletes) {\n    return axios.put(\"/api/mail/senderDelete\", deletes, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  deleteReciever: function deleteReciever(deletes) {\n    return axios.put(\"/api/mail/receiverDelete\", deletes, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  // <------------------------------------>\n  //sent mail\n  mailSender: function mailSender(messages) {\n    return axios.put(\"/api/mail/sender\", messages, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  // <------------------------------------>\n  // friend routes\n  friendAdd: function friendAdd(friend) {\n    return axios.post(\"/api/users/friendAdd\", friend, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  friendFind: function friendFind(friend) {\n    console.log(\"axios call check: \", friend);\n    return axios.post(\"/api/users/friendFind\", friend, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  // <------------------------------------>\n  // group routes\n  groupAdd: function groupAdd(group) {\n    return axios.post(\"/api/users/groupAdd\", group, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  groupFind: function groupFind(groups) {\n    return axios.post(\"/api/users/groupFind\", {\n      user: groups\n    }, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  // <------------------------------------>\n  // game routes\n  gamesAdd: function gamesAdd(games) {\n    return axios.post(\"/api/users/gamesAdd\", games, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  gamesFind: function gamesFind(games) {\n    return axios.post(\"/api/users/gamesFind\", {\n      user: games\n    }, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  // <------------------------------------>\n  // blog routes\n  blogAdd: function blogAdd(blogs) {\n    return axios.post(\"/api/blogs/addBlogs\", blogs, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  blogFind: function blogFind() {\n    return axios.get(\"/api/blogs/getBlogs\", {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  blogId: function blogId(id) {\n    return axios.get(\"/api/blogs/\" + id);\n  },\n  blogGame: function blogGame(game) {\n    return axios.get(\"/api/blogs/blogGame/\" + game);\n  },\n  // <------------------------------------>\n  // make a comment route\n  commentAdd: function commentAdd(comment) {\n    return axios.post(\"/api/blogs/comments\", comment);\n  },\n  commentFind: function commentFind() {\n    return axios.get(\"/api/blogs/getComments\");\n  },\n  // <------------------------------------>\n  // make a user route\n  newUser: function newUser(User) {\n    return axios.post(\"/api/newUser\", User, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  },\n  whoAmI: function whoAmI(token) {\n    return axios.get(\"/api/me\", {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    });\n  },\n  //<------------------------------------->\n  //Get all games\n  gameGet: function gameGet() {\n    return axios.get(\"/api/gameList\");\n  },\n  findeProfile: function findeProfile(pass) {\n    return axios.post(\"/api/profile\", pass, {\n      headers: {\n        Authorization: \"Bearer \".concat(Auth.getToken())\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:\\Users\\pbrow\\UNCC\\Homework\\PlayerVSWorld\\player-vs-world\\client\\src\\utils\\API.js"],"names":["axios","Auth","getMessages","userInfo","console","log","getToken","post","headers","Authorization","getMessage","messageId","put","sendMessage","message","deleteSent","deletes","deleteReciever","mailSender","messages","friendAdd","friend","friendFind","groupAdd","group","groupFind","groups","user","gamesAdd","games","gamesFind","blogAdd","blogs","blogFind","get","blogId","id","blogGame","game","commentAdd","comment","commentFind","newUser","User","whoAmI","token","gameGet","findeProfile","pass"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Auth from \"./auth\"\n\nexport default {\n  // Gets all Messages\n  getMessages: (userInfo) => {\n    console.log(Auth.getToken())\n    return axios.post(\"/api/mail/receiver\",userInfo,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  // <------------------------------------>\n  // Gets a single message by ID\n  getMessage: (messageId) => {\n    return axios.put(\"/api/mail/get\", messageId,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  // <------------------------------------>\n  //sending a message\n  sendMessage: (message) => {\n    console.log(\"this is the token yo\",Auth.getToken())\n    return axios.post(\"/api/mail/send\", message,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  // <------------------------------------>\n  // DELETE route for deleting sent mail\n  deleteSent: (deletes) => {\n    return axios.put(\"/api/mail/senderDelete\", deletes,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  deleteReciever: (deletes) => {\n    return axios.put(\"/api/mail/receiverDelete\", deletes,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  // <------------------------------------>\n  //sent mail\n  mailSender: (messages) => {\n    return axios.put(\"/api/mail/sender\", messages,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  // <------------------------------------>\n  // friend routes\n  friendAdd: (friend) => {\n    return axios.post(\"/api/users/friendAdd\", friend,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  friendFind: (friend) => {\n    console.log(\"axios call check: \", friend)\n    return axios.post(\"/api/users/friendFind\", friend,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n\n\n  // <------------------------------------>\n  // group routes\n  groupAdd: (group) => {\n    return axios.post(\"/api/users/groupAdd\", group,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  groupFind: (groups) => {\n    return axios.post(\"/api/users/groupFind\", { user: groups },{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  // <------------------------------------>\n  // game routes\n  gamesAdd: (games) => {\n    return axios.post(\"/api/users/gamesAdd\", games,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  gamesFind: (games) => {\n    return axios.post(\"/api/users/gamesFind\", { user: games },{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  // <------------------------------------>\n  // blog routes\n  blogAdd: (blogs) => {\n    return axios.post(\"/api/blogs/addBlogs\", blogs,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  blogFind: () => {\n    return axios.get(\"/api/blogs/getBlogs\",{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  blogId: function (id) {\n    return axios.get(\"/api/blogs/\" + id);\n  },\n  blogGame: function (game) {\n    return axios.get(\"/api/blogs/blogGame/\" + game);\n  },\n    // <------------------------------------>\n  // make a comment route\n  commentAdd: (comment) => {\n    return axios.post(\"/api/blogs/comments\", comment)\n  },\n  commentFind: () => {\n    return axios.get(\"/api/blogs/getComments\")\n  },\n  // <------------------------------------>\n  // make a user route\n  newUser: (User) => {\n    return axios.post(\"/api/newUser\", User,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  },\n  whoAmI: (token) => {\n    return axios.get(\"/api/me\",{ headers :{Authorization: `Bearer ${token}`}});\n  },\n  //<------------------------------------->\n  //Get all games\n  gameGet: () => {\n    return axios.get(\"/api/gameList\")\n  },\n  findeProfile: (pass) => {\n\n    return axios.post(\"/api/profile\", pass,{ headers :{Authorization: `Bearer ${Auth.getToken()}`}});\n  }\n};"]},"metadata":{},"sourceType":"module"}